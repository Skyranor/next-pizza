generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  fullname  String
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  role      UserRole @default(USER)
  verified  DateTime

  provider   String?
  providerId String?

  cart             Cart?
  orders           Order[]
  verificationCode VerificationCode?
}

model Category {
  id       Int       @id @default(autoincrement())
  name     String    @unique
  products Product[]
}

model Product {
  id        Int      @id @default(autoincrement())
  name      String
  imageUrl  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  category   Category @relation(fields: [categoryId], references: [id])
  categoryId Int

  ingredients Ingredient[]

  items ProductItem[]
}

model ProductItem {
  id        Int  @id @default(autoincrement())
  price     Int
  size      Int?
  pizzaType Int?

  product   Product    @relation(fields: [productId], references: [id])
  productId Int
  CartItem  CartItem[]
}

model Ingredient {
  id        Int      @id @default(autoincrement())
  name      String
  imageUrl  String
  price     Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  products   Product[]
  CartItem   CartItem? @relation(fields: [cartItemId], references: [id])
  cartItemId Int?
}

model VerificationCode {
  id        Int      @id @default(autoincrement())
  user      User?    @relation(fields: [userId], references: [id])
  userId    Int?     @unique
  code      String   @unique
  createdAt DateTime @default(now())

  @@unique([userId, code])
}

model Cart {
  id          Int    @id @default(autoincrement())
  user        User?  @relation(fields: [userId], references: [id])
  userId      Int?   @unique
  totalAmount Int    @default(0)
  token       String

  items CartItem[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model CartItem {
  id            Int         @id @default(autoincrement())
  productItem   ProductItem @relation(fields: [productItemId], references: [id])
  productItemId Int
  quantity      Int
  cart          Cart        @relation(fields: [cartId], references: [id])
  cartId        Int

  ingredients Ingredient[]
}

model Order {
  id     Int         @id @default(autoincrement())
  user   User?       @relation(fields: [userId], references: [id])
  userId Int?
  status OrderStatus @default(PENDING)

  token String

  totalAmount Int
  paymentId   String?
  items       Json
  fullname    String
  email       String
  address     String
  comment     String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum UserRole {
  USER
  ADMIN
}

enum OrderStatus {
  PENDING
  DELIVERED
  CANCELLED
}
